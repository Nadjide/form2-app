name: Build, Test and Deploy Form2 Application

env:
  REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }}

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build_test:
    permissions:
      contents: write
      pull-requests: write
      pages: write
      id-token: write
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run unit tests
        run: npm test
        env:
          REACT_APP_SERVER_URL: ${{ env.REACT_APP_SERVER_URL }}

      - name: Build Docker images
        run: |
          docker compose --version
          docker compose build

      - name: Start Docker stack
        run: |
          docker compose up -d
          sleep 30

      - name: Run E2E tests with Cypress
        uses: cypress-io/github-action@v6
        with:
          start: docker compose up -d
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120

      - name: Stop Docker stack
        run: docker compose down
        if: always()

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
        if: always()

      - name: Generate documentation
        run: npm run jsdoc

      - name: Build React application
        run: npm run build
        env:
          REACT_APP_SERVER_URL: ${{ env.REACT_APP_SERVER_URL }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy_pages:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_test

    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 